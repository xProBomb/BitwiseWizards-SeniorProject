@page
@model ChangePasswordModel
@{
    ViewData["Title"] = "Change password";
    ViewData["ActivePage"] = ManageNavPages.ChangePassword;
}

<style>
    
    .password-container {
        background-color: var(--bs-secondary-bg);
        border-radius: 12px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        padding: 2rem;
        margin-bottom: 2rem;
        border: 1px solid var(--bs-border-color);
    }
    
    [data-bs-theme="dark"] .password-container {
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
    }
    
    .password-header {
        display: flex;
        align-items: center;
        margin-bottom: 1.5rem;
        border-bottom: 1px solid var(--bs-border-color);
        padding-bottom: 1rem;
    }
    
    .password-icon {
        color: #0d6efd;
        font-size: 2.2rem;
        margin-right: 1rem;
    }
    
    .password-content {
        background-color: var(--bs-body-bg);
        border-radius: 8px;
        padding: 1.5rem;
        border: 1px solid var(--bs-border-color);
    }
    
    .password-tips {
        background-color: rgba(13, 110, 253, 0.05);
        border-radius: 8px;
        padding: 1.25rem;
        margin-top: 1.5rem;
        border-left: 4px solid #0d6efd;
    }
    
    [data-bs-theme="dark"] .password-tips {
        background-color: rgba(13, 110, 253, 0.1);
    }
    
    .tips-title {
        display: flex;
        align-items: center;
        color: #0d6efd;
        font-weight: 600;
        margin-bottom: 1rem;
    }
    
    .tips-icon {
        margin-right: 0.75rem;
        font-size: 1.25rem;
    }
    
    .password-input-container {
        position: relative;
    }
    
    .password-toggle {
        position: absolute;
        top: 50%;
        right: 10px;
        transform: translateY(-50%);
        background: none;
        border: none;
        color: var(--bs-secondary-color);
        cursor: pointer;
        z-index: 10;
    }
    
    .password-toggle:hover {
        color: var(--bs-body-color);
    }
    
    .password-strength {
        height: 5px;
        border-radius: 2px;
        margin-top: 0.5rem;
        background-color: #e9ecef;
        transition: all 0.3s ease;
    }
    
    .password-strength-weak {
        width: 33%;
        background-color: #dc3545;
    }
    
    .password-strength-medium {
        width: 66%;
        background-color: #ffc107;
    }
    
    .password-strength-strong {
        width: 100%;
        background-color: #198754;
    }
    
    .password-strength-label {
        font-size: 0.8rem;
        margin-top: 0.25rem;
        text-align: right;
    }
    
    .update-btn {
        background-color: #0d6efd;
        border: none;
        color: white;
        padding: 12px 20px;
        font-size: 1rem;
        font-weight: 500;
        border-radius: 6px;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-top: 1.5rem;
    }
    
    .update-btn:hover {
        background-color: #0b5ed7;
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }
    
    .update-btn-icon {
        margin-right: 0.5rem;
    }
</style>

<partial name="_StatusMessage" for="StatusMessage" />

<div class="password-container">
    <div class="password-header">
        <i class="bi bi-key-fill password-icon"></i>
        <h3 class="mb-0">@ViewData["Title"]</h3>
    </div>
    
    <p class="text-muted mb-4">
        For your security, please enter your current password before setting a new one.
        Your new password must meet our security requirements.
    </p>
    
    <div class="password-content">
        <form id="change-password-form" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
            
            <div class="form-floating mb-4">
                <input asp-for="Input.OldPassword" class="form-control" type="password" 
                       autocomplete="current-password" aria-required="true" 
                       placeholder="Please enter your old password." />
                <label asp-for="Input.OldPassword" class="form-label">Current Password</label>
                <span asp-validation-for="Input.OldPassword" class="text-danger"></span>
            </div>
            
            <div class="form-floating mb-1 password-input-container">
                <input asp-for="Input.NewPassword" class="form-control" type="password" 
                       autocomplete="new-password" aria-required="true" id="newPassword"
                       placeholder="Please enter your new password." />
                <label asp-for="Input.NewPassword" class="form-label">New Password</label>
                <button type="button" class="password-toggle" id="toggleNewPassword">
                    <i class="bi bi-eye-slash"></i>
                </button>
            </div>
            
            <div class="password-strength" id="passwordStrength"></div>
            <div class="password-strength-label" id="passwordStrengthText">Password strength</div>
            <span asp-validation-for="Input.NewPassword" class="text-danger"></span>
            
            <div class="form-floating mb-4 mt-4 password-input-container">
                <input asp-for="Input.ConfirmPassword" class="form-control" type="password" 
                       autocomplete="new-password" aria-required="true" id="confirmPassword"
                       placeholder="Please confirm your new password."/>
                <label asp-for="Input.ConfirmPassword" class="form-label">Confirm New Password</label>
                <button type="button" class="password-toggle" id="toggleConfirmPassword">
                    <i class="bi bi-eye-slash"></i>
                </button>
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
            </div>
            
            <button type="submit" class="w-100 btn update-btn">
                <i class="bi bi-lock-fill update-btn-icon"></i>
                Update Password
            </button>
        </form>
        
        <div class="password-tips">
            <div class="tips-title">
                <i class="bi bi-info-circle-fill tips-icon"></i>
                Password Security Tips
            </div>
            <ul class="mb-0">
                <li>Use a minimum of 8 characters</li>
                <li>Include uppercase and lowercase letters</li>
                <li>Add numbers and special characters</li>
                <li>Avoid using personal information</li>
                <li>Don't reuse passwords from other sites</li>
            </ul>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
      
        if (!document.querySelector('link[href*="bootstrap-icons"]')) {
            const iconLink = document.createElement('link');
            iconLink.rel = 'stylesheet';
            iconLink.href = 'https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css';
            document.head.appendChild(iconLink);
        }
        
        // Toggle password visibility
        function setupPasswordToggle(inputId, toggleId) {
            const input = document.getElementById(inputId);
            const toggle = document.getElementById(toggleId);
            
            if (input && toggle) {
                toggle.addEventListener('click', function() {
                    const type = input.getAttribute('type') === 'password' ? 'text' : 'password';
                    input.setAttribute('type', type);
                    
                    const icon = toggle.querySelector('i');
                    icon.classList.toggle('bi-eye');
                    icon.classList.toggle('bi-eye-slash');
                });
            }
        }
        
        // Password strength meter
        function checkPasswordStrength(password) {
            const strengthMeter = document.getElementById('passwordStrength');
            const strengthText = document.getElementById('passwordStrengthText');
            
            // Remove any existing classes
            strengthMeter.className = 'password-strength';
            
            if (!password) {
                strengthText.textContent = 'Password strength';
                return;
            }
            
            let strength = 0;
            
            // Length check
            if (password.length >= 8) strength += 1;
            if (password.length >= 12) strength += 1;
            
            // Complexity checks
            if (/[A-Z]/.test(password)) strength += 1;
            if (/[a-z]/.test(password)) strength += 1;
            if (/[0-9]/.test(password)) strength += 1;
            if (/[^A-Za-z0-9]/.test(password)) strength += 1;
            
            // Set appropriate class and text
            if (strength <= 2) {
                strengthMeter.classList.add('password-strength-weak');
                strengthText.textContent = 'Weak';
                strengthText.style.color = '#dc3545';
            } else if (strength <= 4) {
                strengthMeter.classList.add('password-strength-medium');
                strengthText.textContent = 'Medium';
                strengthText.style.color = '#ffc107';
            } else {
                strengthMeter.classList.add('password-strength-strong');
                strengthText.textContent = 'Strong';
                strengthText.style.color = '#198754';
            }
        }
        
        // Initialize functionality
        document.addEventListener('DOMContentLoaded', function() {
            setupPasswordToggle('newPassword', 'toggleNewPassword');
            setupPasswordToggle('confirmPassword', 'toggleConfirmPassword');
            
            const newPasswordInput = document.getElementById('newPassword');
            if (newPasswordInput) {
                newPasswordInput.addEventListener('input', function() {
                    checkPasswordStrength(this.value);
                });
            }
        });
    </script>
}