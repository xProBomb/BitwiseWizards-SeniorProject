@using Microsoft.AspNetCore.Mvc.TagHelpers
@using TrustTrade.ViewModels
@model PostDetailsVM

@{
    ViewData["Title"] = "Post Details";
}

<!-- Post Actions Dropdown For The Owner -->
<!-- Post Actions Row -->
<div class="d-flex justify-content-between">
    <!-- Admin Delete Button (left side) -->
    @if (Model.IsUserAdmin && !Model.IsOwnedByCurrentUser)
    {
        <form asp-controller="Admin" asp-action="DeletePost" asp-route-id="@Model.Id" method="post" class="delete-post-form">
            <button type="submit" class="btn btn-outline-danger btn-sm me-2">
                <i class="bi bi-x-circle"></i> Delete (Admin)
            </button>
        </form>
    }

<div class="container mt-4">
    <!-- Post Details -->
    <div class="card">
        <div class="card-body">
            <div class="d-flex justify-content-between align-items-center">
                <!-- Left Section: Profile Picture, Username, and Timestamp -->
                <div class="d-flex align-items-center">
                    <!-- Profile Links -->
                    <a asp-controller="Profile" 
                        asp-action="UserProfile" 
                        asp-route-username="@Model.Username"
                        class="image-profile-link">
                        <img src="@(Model.ProfilePicture != null 
                                ? $"data:image/jpeg;base64,{Convert.ToBase64String(Model.ProfilePicture)}"
                                : "/icons/defpfp.png")"
                                alt="Profile Picture"
                                class="rounded-circle"
                                style="width: 50px; height: 50px;" />
                    </a>
                    <a asp-controller="Profile" 
                        asp-action="UserProfile" 
                        asp-route-username="@Model.Username"
                        class="username-profile-link ms-2">
                        @Model.Username
                    </a>
                    <!-- Display Plaid Info If Enabled-->
                    @if (Model.IsPlaidEnabled)
                    {
                        <span class="text-success ms-2">
                            @if (!string.IsNullOrEmpty(Model.PortfolioValueAtPosting))
                            {
                                @Model.PortfolioValueAtPosting
                            }
                            <i class="bi bi-patch-check-fill"></i>
                            <!-- Consider whether or not to add this <small> Plaid Enabled</small> -->
                        </span>
                    }
                    <!-- Display Time Ago -->
                    <span class="text-muted ms-2">@Model.TimeAgo</span>
                </div>

                <!-- Right Section: Kebab Menu -->
                <div class="dropdown">
                    <button class="btn btn-outline-secondary btn-sm dropdown-toggle" type="button" id="postActionsMenu-@Model.Id" data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="bi bi-three-dots"></i>
                    </button>
                    <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="postActionsMenu-@Model.Id">
                        <!-- Owner Actions -->
                        @if (Model.IsOwnedByCurrentUser)
                        {
                            <li>
                                <a class="dropdown-item" asp-controller="Posts" 
                                asp-action="Edit" 
                                asp-route-id="@Model.Id">
                                    <i class="bi bi-pencil"></i> Edit
                                </a>
                            </li>
                            <li>
                                <form asp-action="Delete" asp-route-id="@Model.Id" method="post" class="delete-post-form">
                                    <button type="submit" class="dropdown-item text-danger">
                                        <i class="bi bi-trash"></i> Delete
                                    </button>
                                </form>
                            </li>
                        }
                        <li>
                            <button class="dropdown-item save-post-button" data-post-id="@Model.Id" data-is-saved="@Model.IsSavedByCurrentUser">
                                <i class="bi @(Model.IsSavedByCurrentUser ? "bi-bookmark-fill" : "bi-bookmark")"></i>
                                <span class="save-status-text">
                                    @(Model.IsSavedByCurrentUser ? "Unsave" : "Save")
                                </span>
                            </button>
                        </li>
                        <!-- Owner can't report their own post, but others can -->
                        @if (!Model.IsOwnedByCurrentUser)
                        {
                            <li>
                                <button class="dropdown-item text-danger" onclick="openReportModal('Post', @Model.Id)">
                                    <i class="bi bi-flag"></i>
                                    <span>Report Post</span>
                                </button>
                            </li>
                        }
                    </ul>
                </div>
            </div>


            <!-- Display Main Post Content -->
            <h2 class="card-title mt-3">@Model.Title</h2>
            <div class="mt-2">
                @foreach (var tag in Model.Tags)
                {
                    <span class="badge bg-secondary me-2">@tag</span>
                }
            </div>
            <p class="card-text mt-4">@Model.Content</p>

            <!-- Display Post Images -->
            @if (Model.Photos != null && Model.Photos.Any())
            {
                <div class="post-images mb-3">
                    @foreach (var photo in Model.Photos)
                    {
                        <img src="@photo" alt="Post Image" class="img-fluid rounded mb-2" />
                    }
                </div>
            }

            <!-- Like and Comment Buttons -->
            <div class="d-flex align-items-center mt-4">
                <button class="btn btn-primary like-btn position-relative @(Model.IsLikedByCurrentUser ? "liked" : "")" 
                        data-post-id="@Model.Id" 
                        aria-label="Like">
                    <i class="bi @(Model.IsLikedByCurrentUser ? "bi-hand-thumbs-up-fill" : "bi-hand-thumbs-up")"></i> 
                    <span class="like-count">@Model.LikeCount</span>
                </button>
                <button class="btn btn-primary position-relative ms-4" aria-label="Comment">
                    <i class="bi bi-chat"></i> <span id="commentCount">@Model.CommentCount</span>
                </button>
            </div>
        </div>
    </div>

    <!-- Comment Section -->
    @if (Model.IsPresentationModeEnabled && !Model.CanPostDuringPresentation)
    {
        <div class="alert alert-info mt-4 mb-4">
            <strong>Presentation Mode is enabled!</strong> You cannot post comments during the presentation.
        </div>
    }
    else
    {
        <div class="mt-4 mb-4">
            <div class="mb-3">
                <input type="text" id="content" class="form-control" placeholder="Add a comment..." required />
                <input type="hidden" id="postId" value="@Model.Id" />
            </div>
            <div id="submitButtonWrapper" style="display: none;">
                <button id="submitCommentButton" class="btn btn-primary btn-sm">Post Comment</button>
            </div>
        </div>
    }

    <!-- Comments List -->
    <ul id="comments-section" class="list-group list-group-flush">
        @if (!Model.Comments.Any())
        {
            <p id="noCommentsMessage" class="text-muted">No comments yet. Be the first to comment!</p>
        }
        else
        {
            @foreach (var comment in Model.Comments)
            {
                <partial name="../Comments/_CommentPartial" model="comment" />
            }
        }
    </ul>
</div>

@await Html.PartialAsync("_ReportModal")

@section Scripts {
    <script src="~/js/commentActions.js"></script>
    <script src="~/js/commentLike.js"></script>
    <script src="~/js/reportModal.js"></script>
}